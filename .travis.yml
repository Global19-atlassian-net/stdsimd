language: rust
rust:
  - nightly

matrix:
  fast_finish: true
  include:
    # Linux (aarch64)
    - name: "aarch64-unknown-linux-gnu (neon)"
      os: linux
      arch: arm64

    - name: "aarch64-unknown-linux-gnu (neon, sve)"
      os: linux
      arch: arm64
      env: RUSTFLAGS=-Ctarget-feature=+sve

    - name: "aarch64-unknown-linux-gnu (native, see log for cfg)"
      os: linux
      arch: arm64
      env: RUSTFLAGS=-Ctarget-cpu=native

    # Linux (armv7)
    - name: "armv7-unknown-linux-gnueabihf (neon)"
      os: linux
      arch: arm64
      env: RUSTFLAGS=-Ctarget-feature=+neon

    # Linux (powerpc64le)
    - name: "powerpc64le-unknown-linux-gnu (altivec, vsx, power8-*)"
      os: linux
      arch: ppc64le

    - name: "powerpc64le-unknown-linux-gnu (native, see log for cfg)"
      os: linux
      arch: ppc64le
      env: RUSTFLAGS=-Ctarget-cpu=native

    # Linux (x86_64) (for AVX512, which sadly seems to only *usually* be present
    # on the github actions linux runner...)
    - name: "x86_64-unknown-linux-gnu+avx512vl"
      os: linux
      arch: amd64
      env: RUSTFLAGS=-Ctarget-feature=+avx512vl

    # WebAssembly (wasm-bindgen)
    - name: "wasm32-unknown-unknown (node, firefox, chrome)"
      os: linux
      arch: amd64
      addons:
        firefox: latest
        chrome: stable
      install:
        - curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      script:
        - wasm-pack test --node --firefox --chrome --headless crates/core_simd
        - wasm-pack test --node --firefox --chrome --headless crates/core_simd --release

    - name: "wasm32-unknown-unknown+simd128 (chrome)"
      os: linux
      arch: amd64
      addons:
        chrome: stable
      install:
        - curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      script:
        - export RUSTFLAGS="-C target-feature=+simd128"
        - wasm-pack test --chrome --headless crates/core_simd
        - wasm-pack test --chrome --headless crates/core_simd --release

script:
  - echo "## Requested target configuration (RUSTFLAGS=$RUSTFLAGS)"
  - rustc --print=cfg $RUSTFLAGS

  - echo "## Supported target configuration"
  - rustc --print=cfg -Ctarget-cpu=native

  - echo "\n---\n"

  - echo "## Running tests (debug)"
  - cargo test -v

  - echo "## Running tests (release)"
  - cargo test -v --release
